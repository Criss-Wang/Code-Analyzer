#pragma once
#include <string>
#include <list>
#include "TNode.h"
using namespace std;

class AST {

private:

	TNode* root;

public:

	AST() {
		root = nullptr;
	};

	AST(TNode* node) {
		root = node;
	};

	/*Returns the root of AST*/
	TNode* getRoot();

	/*Prints a 'horizontal' tree on terminal. Used for debugging.*/
	string print(string prefix, TNode* node, int pos);

	/*Build an AST Tree using the input.
	TODO: change data structure of input to match with the data structure of tokens generated by Tokenizer.*/
	void buildtree(list<string> input);

	/*Compares the root of 2 ASTs. Used for testing.*/
	bool isEqual(AST ast);

	bool operator==(const AST& rhs) const;
};
